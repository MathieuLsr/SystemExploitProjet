#define PORT_TERMINAL 8440
#define PORT_ACQUISITION 8441

#define PORTS_ACQUISITION_INTERARCHIVES {} 
#define PORT_ACQUISITION_INTERARCHIVES 8442

#define PORT_INTERARCHIVES 8460

// Ici, on prend les ports aussi pour des IDs pour faciliter
#define PORTS_VALIDATION {PORT_VALIDATION_1, PORT_VALIDATION_2, PORT_VALIDATION_3}
#define PORT_VALIDATION_1 8451
#define PORT_VALIDATION_2 8452
#define PORT_VALIDATION_3 8453

#define SERVER_TERMINAL "127.0.0.1"
#define SERVER_ACQUISITION "127.0.0.1"
#define SERVER_VALIDATION "127.0.0.1"
#define SERVER_INTERARCHIVES "127.0.0.1"

#define NombreElements 3
#define ID_PASS_PLACE 0
#define TYPE_PLACE 1
#define DATE_PLACE 2
#define REPONSE_PLACE 2

#define TRUE_VALUE 0
#define FALSE_VALUE 1
#define DEMANDE_VALUE "D"
#define REPONSE_VALUE "R"


struct MPacket{
    char* str_defaut ; 
    long long id_pass ; 
    char* type ;
    char* date ;
} ;

struct MPacket* MPacket_Create(char* str); 
int MPacket_println(struct MPacket* packet) ;
char* MPacket_formatted(struct MPacket* p) ;
long long MPacket_GetTimeDays(struct MPacket* p) ;
int MPacket_GetServer(struct MPacket* p) ;
long MPacket_GetPass(struct MPacket* p) ;
int MPacket_IsValidTime(struct MPacket* p) ;
struct MPacket* MPacket_Build(long id, char* type, char* value) ;

int SendNewPacket(char* SERVER, int PORT, char* str, int size) ;
int InitPacketReceive(int PORT);
char* readSocket(int socket_server) ;